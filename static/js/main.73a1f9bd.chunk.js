(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(e){e.exports=[{typos:{target:"javascript",name:"Data",list:[{question:"What data types are there in JS?",answer:"Strings, Numbers, Booleans, Undefined, Null, BigInt, Symbol, Object"},{question:"Which types in JS are mutable and which are not?",answer:"only Objects and Arrays are mutable"},{question:"What does a reference to a variable mean?",answer:"It means that changing the value in one variable does not affect the other. Copying a reference from one variable to another creates a reference so that two variables refer to the same object. This means that changing the object via one variable reflects in another variable."},{question:"What is 'NaN'? How can I check if a variable is 'NaN'?",answer:"NaN - Not a Number. Use the Number.isNaN(var) or isNaN(var)"},{question:"What does it mean to create a variable through a constructor or through a literal?",answer:"Objects created using object literals means when a change is made to the object, it affects that object across the entire script. Object defined with a function constructor let us have multiple instances of that object. This means change made to one instance, will not affect other instances."},{question:"When should you use dot notation when accessing an object property, and when through a string in square brackets?",answer:"1. Object.method; 2. Object[variable or 'method']"},{question:"What happens if you try to get a property that does not exist in an object?",answer:"1. We get - 'undefined'. 2. With .hasOwnProperty() - false; 3. With 'in' - false;"},{question:"What does 'hasOwnProperty' do?",answer:"Use the hasOwnProperty() method to check if an property exists in the own properties of an object."},{question:"When to use 'null' and when to use 'undefined'?",answer:'Only use null if you explicitly want to denote the value of a variable as having "no value". Undefined is meant to say that the reference is not existing.'},{question:"What are the ways to create global variables?",answer:"1. window.globalVariable; 2. globalThis.globalVariable; 3. var globalVariable; 4. With help: window, frames, self, global;"},{question:"What is the 'use strict' directive for?",answer:"Strict mode restricts the use of error syntax and will not let the code run with errors in place. It makes creating global variables hard by not letting us declare variables with var , let , or const , so creating variables without declaring them with those keywords won't work."}]}},{typos:{target:"javascript",name:"Expressions",list:[{question:"What are expressions and instructions? What are the differences between them?",answer:'An expression is any valid set of literals, variables, operators, and expressions that evaluates to a single value. The value may be a number, a string, or a logical value. Conceptually, there are two types of expressions: those that assign a value to a variable, and those that simply have a value.\nA computer program is a list of "instructions" to be "executed" by a computer. In a programming language, these programming instructions are called statements. Javascript program consists of statements. They are executed one by one, in the same order as they are written. Statements can contain other constructions like expressions, keywords, operators and other stuff. Expressions are parts of statements that return values.'},{question:"What is the difference between 'var',' let', 'const'? Why use 'const' might be preferable?",answer:"1. var - It can be declared without initialization. let - It can be declared without initialization. const - It cannot be declared without initialization. 2. As a general rule, you should always declare variables with const, if you realize that the value of the variable needs to change, go back and change it to let. Use let when you know that the value of a variable will change. Use const for every other variable."},{question:"What is a ternary operator?",answer:"The conditional (ternary) operator is the only JavaScript operator that takes three operands: a condition followed by a question mark (?), then an expression to execute if the condition is truthy followed by a colon (:), and finally the expression to execute if the condition is falsy. This operator is frequently used as an alternative to an if...else statement.\n(condition ? exprIfTrue : exprIfFalse)"},{question:"What does the 'for..in' operator do? What are the special features of using this operator with arrays?",answer:"1. 'for..in' iterates over all properties of an object. 2. Never use 'for..in' with arrays. Array indexes are just enumerable properties with integer names and are otherwise identical to general object properties. The for...in loop will traverse all integer keys before traversing other keys, and in strictly increasing order, making the behavior of for...in close to normal array iteration. However, the for...in loop will return all enumerable properties, including those with non\u2013integer names and those that are inherited. Unlike for...of, for...in uses property enumeration instead of the array's iterator. In sparse arrays, for...of will visit the empty slots, but for...in will not."},{question:"How to safely check that the variable exists (was declared) and not catch a ReferenceError?",answer:"if (typeof variable !== 'undefined' || variable !== null) {}\nif(el){\nif(typeof el === 'string' && el.trim()){}}\nif(el){} - will check for: undefined, null, 0, NaN, false, ``;\nif(typeof(el) !== 'undefined') - will check for: undefined;\nif(el != null) - will check for: null, undefined"}]}},{typos:{target:"javascript",name:"Arrays",list:[{question:"Ways to create arrays (literal, constructor, factory methods 'Array.from()' and 'Array.of()');",answer:"1. let arr = [1,2,3];\n2. let arr = new Array(3); //[,,]\n 3. Array.from('mass'); //['m','a','s','s']\n4. Array.of(7); // [7]\n5. Array(3); //[,,]"},{question:"Removing an element from an array (what are the ways and what are the features);",answer:"array.pop() - remove the last element from an Array\narray.shift() - remove the first element from an Array.\nlet arr = [1,2,3,4,5]; arr.length = 3; //arr = [1,2,3];\nlet array = [1,2,3,4,5]; array.splice(2,2); // array = [1,2,5];"},{question:"The 'length' property of an array. What value will the property 'length' of array 'a' have and why: 'const a = [1, 2, 3]; a[5] = 6;'\nWhat happens if you reassign a new value?\nDoes 'length' have an effect on deleting an element in the middle of the array? Which ways to remove items affect the length and which do not?",answer:"1. Length a: 6; // [1,2,3,,,6]\n4. 'delete' isn't affect to length of Array"},{question:"How to check that the variable contains an array?",answer:"Array.isArray([]); // true\nArray.isArray({}); // false"},{question:"What they do, how and when to use the following methods:\n`reduce`\n`sort`\n`filter`\n`map`\n`forEach`\n`some`\n`every`",answer:'reduce() - method executes a user-supplied "reducer" callback function on each element of the array, in order, passing in the return value from the calculation on the preceding element. The final result of running the reducer across all elements of the array is a single value.\nsort() - method sorts the elements of an array in place and returns the sorted array. The time and space complexity of the sort cannot be guaranteed as it depends on the implementation\nfilter() - method creates a new array with all elements that pass the test implemented by the provided function.\nmap() - method creates a new array populated with the results of calling a provided function on every element in the calling array.\nforEach() - method executes a provided function once for each array element.\nsome() - method tests whether at least one element in the array passes the test implemented by the provided function. It returns true if, in the array, it finds an element for which the provided function returns true; otherwise it returns false. It doesn\'t modify the array.\nevery() - The every() method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.'}]}},{typos:{target:"javascript",name:"Functions",list:[{question:"What are the 4 function call templates that set the context for the execution of this function?\nHow does the `use strict` directive affect `this` inside a function?",answer:"'Use strict' is an extremely useful thing."},{question:"How to get all the arguments of the function (including those that are not declared, but were still passed)?",answer:"const getAllArgs = (...args) => {\nconst [a,b,c,...d] = args;\n}\ngetAllArgs(1, null, 'x', true, undefined, [7,8,9], {first: 'one', second: 'two'});"},{question:"What is recursion? When is it convenient to use it?",answer:"Recursion is a process of calling itself. A function that calls itself is called a recursive function. Recursion is made for solving problems that can be broken down into smaller, repetitive problems. It is especially good for working on things that have many possible branches and are too complex for an iterative approach. One good example of this would be searching through a file system."},{question:"What are closures, and when can they be useful? How can we store state with a closure, and what can this state be used for?",answer:"A closure is a function that references variables in the outer scope from its inner scope. The closure preserves the outer scope inside its inner scope. To understand the closures, you need to know how the lexical scoping works first. Closures are useful because they let you 'remember' data and then let you operate on that data through returned functions. This allows javascript to emulate private methods that are found in other programming languages. Private methods are useful for restricting access to code as well as managing your global namespace."},{question:"How to implement the `bind` function?",answer:"Function.prototype.mybind = function(obj, ...args) {const fn = this;\nreturn function (...nextArgs) {\nfn.apply(obj, [...args, ...nextArgs]);\n}\n}\nconst info = {\nfirstName: 'Nikola',\nlastName: 'Snikos',\n}\nconst printInfo = function (city, country) {\nconsole.log(`I am ${this.firstName} ${this.lastName} living in from ${city}, ${country}`);\n}\nconst callMethod = printInfo.mybind(info, 'Baykalsk');\ncallMethod('Siberia');"},{question:"To solve the following problem: let us have an array of links, and our task is to make sure that when you click on each, its ordinal number is displayed. The first solution that comes to mind looks like this: In fact, it turns out that when you click on any link, the same number is displayed - the value of `links.length`. Why is this happening and how to fix this muck?\n`for (var i = 0; i < links.length; i++) {links[i].onclick = function(){alert (i); }}`",answer:"This is an old trouble. Need to use 'let' instead of 'var'"},{question:"What is callback (callback function)? When are they usually used?",answer:"1. Callbacks make sure that a function is not going to run before a task is completed but will run right after the task has completed.\n2. It helps us develop asynchronous JavaScript code and keeps us safe from problems and errors. "},{question:"What is currying?",answer:"Currying is a function that takes one argument at a time and returns a new function expecting the next argument. It is a transformation of functions that translates a function from callable as f(a, b, c) into callable as f(a)(b)(c).\n- Currying is a checking method to make sure that you get everything you need before you proceed.\n- It helps you to avoid passing the same variable again and again.\n- It divides your function into multiple smaller functions that can handle one responsibility. This makes your function pure and less prone to errors and side effects.\n- It is used in functional programming to create a higher-order function."},{question:"What is partial application?",answer:"Is a technique of fixing a number of arguments to a function, producing another function of smaller arguments i.e binding values to one or more of those arguments as the chain of function progressed."},{question:"What is memoization?",answer:"In programming, memoization is an optimization technique that makes applications more efficient and hence faster. It does this by storing computation results in cache, and retrieving that same information from the cache the next time it's needed instead of computing it again."}]}},{typos:{target:"javascript",name:"Prototypes",list:[{question:"What is a constructor function? How to create them and how to use them?",answer:"Constructor function is used to create objects. A constructor is a special function that creates and initializes an object instance of a class. In JavaScript, a constructor gets called when an object is created using the new keyword. The purpose of a constructor is to create a new object and set values for any existing object properties."},{question:"What is a prototype? What opportunities does it have / gives?",answer:"Prototypes are the mechanism by which JavaScript objects inherit features from one another. The prototype is an object that is associated with every functions and objects by default in JavaScript, where function's prototype property is accessible and modifiable and object's prototype property (aka attribute) is not visible. Every function includes prototype object by default. Prototype in JavaScript."},{question:"Why is it better to store object methods in the prototype and not in the object itself?",answer:"Prototypes allow you to easily define methods to all instances of a particular object. The beauty is that the method is applied to the prototype, so it is only stored in the memory once, but every instance of the object has access to it."},{question:"Is it possible to create a function instance through the constructor? And if so, how, and if not, what interface would you implement for this task?",answer:"***"},{question:"How to create an object that doesn't inherit from anything?",answer:"class Orphan extends null {}\nor\nObject.setPrototypeOf(Orphan.prototype, null)"},{question:"What 3 (at least) ways are there to be inherited in JavaScript? What are the differences and nuances?",answer:"1. Prototypal inheritance is a type of inheritance that adds new properties and methods to an existing object. This inheritance makes use of prototype objects i.e. object.prototype.\n2. Psuedoclassical inheritance. This type of inheritance emulates classical inheritance using prototypal inheritance. However, if you\u2019re programming with ES6, the use of psuedoclassical inheritance isn\u2019t encouraged since you can use conventional classes (the class keyword). In psuedoclassical inheritance, we try to create a class with a function that is intended to be called with the new keyword.\n3. Functional inheritance involves inheriting features with the use of an augmenting function to an object instance."},{question:"How to call the overridden method of the parent in the overridden method of the inheriting class? Example pseudocode:\nclass Person method getFullName () return this.name + this.surname\nclass Employee extends Person method getFullName () return super () + this.position",answer:"Invoking overridden method from sub-class : We can call parent class method in overriding method using super keyword. Overriding and constructor : We can not override constructor as parent and child class can never have constructor with same name(Constructor name must always be same as Class name)"},{question:"What are the ways to permanently bind a class method to its instance (so that `this` is always the current instance of the class)?",answer:"***"}]}},{typos:{target:"javascript",name:"Objects",list:[{question:"What are getters and setters? How can I use them natively in JS?",answer:"They are code constructs that help developers access the properties of objects in a secure way. With getters, you can access (get) the values of properties from external code, while setters let you change (set) their values. The getter method returns the value of the attribute. The setter method takes a parameter and assigns it to the attribute. Getters and setters allow control over the values. You may validate the given value in the setter before actually setting the value."},{question:"Object property descriptors: what is it and what can you do?",answer:"A JavaScript object has properties associated with it. A property of an object can be explained as a variable that is attached to the object. Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects."},{question:"Casting objects to primitives: when does it happen and how does it work?\nHow to make it possible to add two objects?\n`const a = {x: 3};\nconst b = {x: 5};\n...\nconsole.log(a + b); // 8`",answer:"***"},{question:"How to make the following expression return `true`?\n`(c == 1 && c == 2 && c == 3)`",answer:"let i = 0;\nlet c = { [Symbol.toPrimitive]: () => ++i };\nconsole.log(c == 1 && c == 2 && c == 3);"}]}},{typos:{target:"javascript",name:"Arrays",list:[{question:"Is it possible to interrupt traversal of elements in the `forEach` method?",answer:"There's no built-in ability to break in forEach . To interrupt execution you would have to throw an exception of some sort."},{question:"Can you use the `indexOf` method to determine the position of the subarray `[3, 4]` in the array `[1, 2, [3, 4], 5]`?",answer:"I don't think so"},{question:"How to convert a string to an array? Can array methods be applied to strings?",answer:"1. string.split('');\n2. While it's impossible to know every single method in JavaScript, it's also nice to know that there are some methods that can be used on more than one data type. Specifically for strings and arrays, these methods are concat, indexOf, and slice."}]}},{typos:{target:"javascript",name:"Functions",list:[{question:"Does the `use strict` directive affect bubbling? How can we avoid floating up variables?",answer:"***"},{question:"What is IIFE (immediately invoked function expression)? What are the ways to write IIFE and why does it work like that?",answer:"An IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined. It is a design pattern which is also known as a Self-Executing Anonymous Function. An immediately invoked function expression is a programming language idiom which produces a lexical scope using function scoping. It was popular in JavaScript as a method to support modular programming before the introduction of more standardized solutions such as CommonJS and ES modules."},{question:"How do I keep the parent context when called immediately invoked function expression?",answer:"***"},{question:"How to use standard array methods on fake arrays (for example, call `map` on `arguments`) and why does it work?",answer:"***"}]}},{typos:{target:"javascript",name:"Regular Expressions",list:[{question:"Why do we need regular expressions?",answer:"In JavaScript, regular expressions are search patterns (JavaScript objects) from sequences of characters. RegExp makes searching and matching of strings easier and faster. For example, in search engines, logs, editors, etc. there's a need to filter/match texts easily and efficiently"},{question:"What methods do regular expression instances in JS have?",answer:"the RegExp methods test() and exec() and with the String methods match() , replace() , search() , and split()"},{question:"What methods do strings have that allow you to work with regular expressions?",answer:"The search() method uses an expression to search for a match, and returns the position of the match. The replace() method returns a modified string where the pattern is replaced"},{question:"What are flags in regular expressions? Tell about flags of globality, case insensitivity, multi-line.",answer:"1. A regular expression consists of a pattern and optional flags: 'g', 'i', 'm' ,'u' ,'s' ,'y' . Without flags and special symbols, the search by a regexp is the same as a substring search.The method string.match(regexp) looks for matches: all of them if there's 'g' flag, otherwise, only the first one.\n2. The 'g' flag indicates that the regular expression should be tested against all possible matches in a string. Comparing strings in a case insensitive manner 'i' means to compare them without taking care of the uppercase and lowercase letters. Multiline option, the 'm' inline option, enables the regular expression engine to handle an input string that consists of multiple lines. It changes the interpretation of the '^' and '$' language elements so that they match the beginning and end of a line, instead of the beginning and end of the input string."},{question:"How do the methods of specifying the quantity (quantifiers) `*`, `+`, `{3}` work?",answer:"A quantifier is appended to a character (or a character class, or a [...] set etc) and specifies how many we need."},{question:"What do the characters `[]` and `[^]`, `.`, `? `, ` ^ `, ` $ `, ` | ` Mean in regular expressions?",answer:"The '[]' construct in a regex is essentially shorthand for an '|' on all of the contents. For example [abc] matches a, b or c. Additionally the - character has special meaning inside of a '[]'."},{question:"What are greedy and lazy quantifiers?",answer:"By default quantifiers like * and + are 'greedy', meaning that they try to match as much of the string as possible. The '?' character after the quantifier makes the quantifier 'non-greedy': meaning that it will stop as soon as it finds a match. The lazy mode of quantifiers is an opposite to the greedy mode. It means: \u201crepeat minimal number of times\u201d. We can enable it by putting a question mark '?' after the quantifier, so that it becomes *? or +? or even ?? for '?'."},{question:"How to use basic placeholders `\\ W`,` \\ w`, `\\ D`,` \\ d`, `\\ S`,` \\ s`, `\\ B`,` \\ b`?",answer:"***"},{question:"How does `\\ b` work for the beginning of a line and for the end of a line? Why does the regular expression `\\ babc \\ b` work for the string` abc`, but the regular expression `\\ b \\. \\. \\ B` does not work for the string` ..`?",answer:"***"},{question:"When to use the escape character `\\`?",answer:"An escape character enables you to output characters you wouldn't normally be able to, usually because the browser will interpret it differently to what you intended. In JavaScript, the backslash ( \\ ) is an escape character."},{question:"Why do we need groups? How to work with them?",answer:"Capturing groups are a way to treat multiple characters as a single unit. They are created by placing the characters to be grouped inside a set of parentheses. For example, the regular expression (dog) creates a single group containing the letters 'd', 'o', and 'g'."},{question:"What do `$ 1`,` $ 2`, etc. mean? in text editors in a replacement box if the search supports regex?",answer:"***"},{question:"How to make an unmemorable group (a group whose entry will not be returned when matching a string to a regular expression)?",answer:"***"},{question:"How to use the group value in the regex itself?",answer:"***"},{question:"Solve tasks:\nWrite a regular expression to translate Function Expression into Function Declaration.\nWrite a regular expression to translate Function Declaration into Function Expression.\nWrite a regular expression to search for all Telegram commands in a message (examples: `/ help`,` / start`, `/ active_orders`,` / order123`). Take into account that there can be several commands in a substring.",answer:"***"}]}},{typos:{target:"javascript",name:"Promises",list:[{question:"What is Promise? What is it for?",answer:"Promises are used to handle asynchronous operations in JavaScript. They are easy to manage when dealing with multiple asynchronous operations where callbacks can create callback hell leading to unmanageable code."},{question:"How to create a Promise?",answer:"The Promise object supports two properties: state and result. While a Promise object is 'pending' (working), the result is undefined. When a Promise object is 'fulfilled', the result is a value. When a Promise object is 'rejected', the result is an error object."},{question:"Methods `then` and `catch`\nWhat are they doing?\nWhat is promise chaining?\nWhat can their callbacks return?",answer:"The then() method in JavaScript has been defined in the Promise API and is used to deal with asynchronous tasks such as an API call.The catch() method returns a Promise and deals with rejected cases only. Promise chaining occurs when the callback function returns a promise. It allows you to chain on another then call which will run when the second promise is fulfilled. Catch can still be called to handle any errors that might occur along the way. 'catch(f)'' the same 'then(null, f)'"},{question:"What is the difference between `then(resolveHandler).catch(rejectHandler)` and `then(resolveHandler, rejectHandler)`?",answer:"***"},{question:"Can a promise be canceled?",answer:"Promise cannot be cancelled, it is the process that returns promise must be cancellable. For example, XmlHttpRequest is cancellable as it has an abort method. Fetch api also supports AbortController. signal, that is cancellable.\n const controller = new AbortController();\nconst task = new Promise((resolve, reject) => {\ncontroller.signal.addEventListener('abort', () => {nreject();\n});\ncontroller.abort();"},{question:"Tell about the methods:\n`Promise.resolve`\n`Promise.reject`\n`Promise.all`\n`Promise.race`",answer:"The static Promise.resolve function returns a Promise that is resolved.\nThe static Promise.reject function returns a Promise that is rejected. For debugging purposes and selective error catching, it is useful to make reason an instanceof Error.\nThis method can be useful for aggregating the results of multiple promises. It is typically used when there are multiple related asynchronous tasks that the overall code relies on to work successfully \u2014 all of whom we want to fulfill before the code execution continues. Promise.all() will reject immediately upon any of the input promises rejecting. In comparison, the promise returned by Promise.allSettled() will wait for all input promises to complete, regardless of whether or not one rejects. Consequently, it will always return the final result of every promise and function from the input iterable.\nThe race function returns a Promise that is settled the same way (and takes the same value) as the first promise that settles amongst the promises of the iterable passed as an argument. If the iterable passed is empty, the promise returned will be forever pending. If the iterable contains one or more non-promise value and/or an already settled promise, then Promise.race will resolve to the first of these values found in the iterable."},{question:"What are the advantages and disadvantages of callbacks and promises?",answer:"If you\u2019ve done any serious work in JavaScript, you have probably had to face callbacks, nested inside of callbacks, nested inside of callbacks. This is especially true of code written in node.js, since every form of i/o, such as file reads, database reads and writes, and memcache access, is asynchronous, and most code needs a more than a single i/o call. Pretty difficult to follow. And it can get much worse. In our current node.js codebase we sometimes do as many as ten sequential, asynchronous calls. That would be a lot of nesting. Thankfully, there\u2019s a much better way: promises. A promise is a proxy for a value not necessarily known at its creation time. With promises, rather than an asynchronous call accepting a callback, it instead returns a promise. The calling code can then wait until that promise is fulfilled before executing the next step. To do so, the promise has a method named then, which accepts a function that will be invoked when the promise has been fulfilled."},{question:"What meaning and state will the next promise have and why:\n`const promise = new Promise ((resolve, reject) => {resolve (0); reject (1); resolve (2);});`",answer:"Answer: 0. Only the first call will work"}]}}]},22:function(e){e.exports={qualities:["My good qualities are:","Helpful","Responsive","Friendly","Reliability","Rational","Give advice","Good ideas","Awareness"],description:{title:"Summary",text:"I'm frontend developer with 8+ years of experience. Seeking to know new IT things in free time. Versatile frontend developer with 2+ years of experience implementing complexweb apps and internal reactive frameworks, specializing in Web Apps development utilizing Vue ecosystem.",idea:"My main focus is to make my work better than I made yesterday. Sometimes I try to improve my English."},personal_info:["Telegram|http://t.me/cobrascript|@cobrascript","Skype Invite|https://join.skype.com/invite/nsbWjVQUdzFb|cobrascript","E-mail|cobrascript@yandex.ru","Portfolio|https://github.com/snikos|snikos","LinkedIn|https://linkedin.com/in/snikos|snikos","My CV|https://snikos.github.io/snikos-cv/|snikos-cv","Codewars|https://www.codewars.com/users/snikos/completed|snikos","Country|Russia"],experiences:{title:"My Experiences",list:["Node.js|Junior","PostgreSQL|Middle","JavaScript|High","jQuery|High","Vue|Middle","React|Junior","Lodash|Middle","HTML,CSS,SCSS|High","Bootstrap|Cool","Sequalize|Middle","Element Plus|Middle","CI/CD|Middle","Web Parse|Middle (Node.js)","File Parse|Middle (Node.js)","Socket.io|Realtime"],also_skills:["Webpack|standard knowledge","Git|standard knowledge","Npm|standard knowledge","Figma|standard knowledge"]},experiencesAlso:{title:"Also My Experience includes basic skill with PEVN (PostgreSQL, Express, Vue 3, Node.js):",list:["PEVN|Junior","MySQL+Ajax+Php|Middle"]},languages:["Russian|Native","English|Intermediate"]}},24:function(e,t,a){e.exports=a(41)},29:function(e,t,a){},35:function(e,t,a){},36:function(e,t,a){},37:function(e,t,a){},38:function(e,t,a){},39:function(e,t,a){},41:function(e,t,a){"use strict";a.r(t);var n=a(0),s=a.n(n),r=a(20),o=a.n(r),i=a(12),l=(a(29),a(6)),c=a(7),h=a(9),u=a(8),m=a(10),d=a(1),p=a(21),f=a(22);function g(){return s.a.createElement(s.a.Fragment,null,s.a.createElement("section",{className:"wrap"},s.a.createElement("div",{id:"gear",className:"gear"})))}var y=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(h.a)(this,Object(u.a)(t).call(this,e))).handleClick=function(){a.setState({toggleClass:""===a.state.toggleClass?"hover":""})},a.state={toggleClass:"hover",timer:0},a.playLogo(1e4),a}return Object(m.a)(t,e),Object(c.a)(t,[{key:"playLogo",value:function(e){var t=this;this.timer=setTimeout(function(){t.handleClick(),t.playLogo(e)},e)}},{key:"render",value:function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"oil ".concat(this.state.toggleClass),onClick:this.handleClick},s.a.createElement("span",{className:"b"},s.a.createElement("figure",{className:"ox"})),s.a.createElement("span",{className:"b"},s.a.createElement("figure",{className:"ox"})),s.a.createElement("span",{className:"b"},s.a.createElement("figure",{className:"ox"})),s.a.createElement("span",{className:"b"},s.a.createElement("figure",{className:"ox"}))))}}]),t}(n.Component);function b(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"col-12 col-sm-8 col-md-6"},s.a.createElement(y,null),s.a.createElement("div",{className:"cv-logo_box"},s.a.createElement("h5",{className:"m-1"},"Web Master Snikos"),s.a.createElement("p",{className:"m-1"},"CV for Front-End Developer"))),s.a.createElement("div",{className:"col-12 col-sm-4 col-md-6"},s.a.createElement("p",{className:"text-center m-3"},s.a.createElement("a",{href:"/snikos-cv/files/cvsnikos.pdf",download:!0},"Download CV"))))}var w=a(14);function v(e){var t=Object.values(e.navigation).map(function(e){return e}),a=s.a.useState(t[0].text),n=Object(w.a)(a,2),r=n[0],o=n[1];return s.a.createElement(s.a.Fragment,null,s.a.createElement("ul",{className:"list-group"},t.length&&t.map(function(e,t){var a=e.link,n=e.text;return s.a.createElement("li",{key:t,className:"list-group-item ".concat(n===r?"active ":""," super-id"),onClick:function(e){return function(e){var t=e.target.textContent;o(t)}(e)}},s.a.createElement(i.b,{key:n,to:a},n))})))}function k(e){var t=String(Object.keys(e)).split("_").join(" ");return s.a.createElement(s.a.Fragment,null,s.a.createElement("h6",{className:"cv-h6 bg-info text-white p-2"},t),s.a.createElement("ul",{className:"list-group"},e.personal_info.map(function(e){var t=e.split("|");return s.a.createElement("li",{key:e,className:"list-group-item"},s.a.createElement("b",{className:"cv-ul__b"},t[0]),"http"===t[1].substr(0,4)?s.a.createElement("a",{href:t[1],title:t[1],rel:"noopener noreferrer",target:"_blank"},t[2]):s.a.createElement("p",null,t[1]))}),s.a.createElement("li",{className:"list-group-item"},s.a.createElement("button",{className:"btn btn-sm btn-success",onClick:function(){return window.print()}},"Print CV-pdf"))))}function x(e){var t=String(Object.keys(e)).split("_").join(" ");return s.a.createElement(s.a.Fragment,null,s.a.createElement("h6",{className:"cv-h6 bg-info text-white p-2"},t),s.a.createElement("ul",{className:"list-group"},e.other_my_skills.map(function(e){var t=e.split("|");return s.a.createElement("li",{key:e,className:"list-group-item super-id"},s.a.createElement("b",{className:"cv-ul__b",title:t[1]},t[0]))})))}function E(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"col-12 col-sm-12 col-md-4 col-lg-3 bg-light"},s.a.createElement(v,{navigation:e.nav}),s.a.createElement(k,{personal_info:e.exp.personal_info}),s.a.createElement(x,{other_my_skills:e.exp.experiences.also_skills})))}function j(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("p",{className:"cv-powerby m-3"},e.list.map(function(e){return s.a.createElement("span",{className:"m-1",key:e},e)})))}var N=function(e){function t(){return Object(l.a)(this,t),Object(h.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return s.a.createElement("div",null,this.props.children)}}]),t}(n.Component),q=function(e){function t(){return Object(l.a)(this,t),Object(h.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return s.a.createElement("div",{className:"h5 bg-".concat(this.props.theme," text-black"),style:{display:"none"}},"MoonFooter")}}]),t}(n.Component);function W(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"col-12 col-sm-12 col-md-12"},s.a.createElement(j,{list:e.lists})),s.a.createElement("div",{className:"col-12 col-sm-12 col-md-12"},s.a.createElement(N,null,s.a.createElement(q,{theme:"light"}))))}var I=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(h.a)(this,Object(u.a)(t).call(this,e))).handleClick=function(){a.setState({toggleClass:"go"!==a.state.toggleClass?"go":""})},a.state={toggleClass:""},a.startGo(),a}return Object(m.a)(t,e),Object(c.a)(t,[{key:"startGo",value:function(){var e=this;setTimeout(function(){e.setState({toggleClass:"go"})},1500)}},{key:"render",value:function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"my-quality ".concat(this.state.toggleClass),onClick:this.handleClick},s.a.createElement("div",{className:"my-quality_block my-quality_main"},this.props.lists.map(function(e,t){return 0===t?s.a.createElement("span",{key:e,className:"my-quality_title"},e):s.a.createElement("span",{key:e,className:"my-quality_subblock my-quality_box".concat(t)},s.a.createElement("span",{className:"my-quality_subtitle"},e))}))))}}]),t}(n.Component);function T(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("h6",{className:"cv-h6 text-info"},e.desc.title),s.a.createElement("p",{className:"cv-text_p"},e.desc.text),s.a.createElement("p",{className:"cv-text_p"},e.desc.idea))}function S(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("h6",{className:"cv-h6 text-info"},"Languages"),s.a.createElement("ul",{className:"row cv-ul"},e.langs&&e.langs.map(function(e,t){var a=e.split("|");return s.a.createElement("li",{key:e,className:"col-6 col-sm-4 col-md-4 col-lg-3"},s.a.createElement("div",{className:"btn-boom btn-boom-cv boom-c-1"},s.a.createElement("div",{className:"boom-hover"},s.a.createElement("span",{className:"out-text"},a[0])),s.a.createElement("div",{className:"boom-shadow"}),s.a.createElement("div",{className:"boom-overlay"}),s.a.createElement("div",{className:"boom-inner"},s.a.createElement("b",{className:"cv-ul__b2"},"Level: ",a[1]))))})))}function C(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("h6",{className:"cv-h6 text-info"},e.expers.title),s.a.createElement("ul",{className:"row cv-ul"},e.expers&&e.expers.list.map(function(e,t){var a=e.split("|");return s.a.createElement("li",{key:e,className:"col-6 col-sm-4 col-md-4 col-lg-3"},s.a.createElement("div",{className:"btn-boom btn-boom-cv boom-c-1"},s.a.createElement("div",{className:"boom-hover"},s.a.createElement("span",{className:"out-text"},a[0])),s.a.createElement("div",{className:"boom-shadow"}),s.a.createElement("div",{className:"boom-overlay"}),s.a.createElement("div",{className:"boom-inner"},s.a.createElement("b",{className:"cv-ul__b2"},"Level: ",a[1]))))})))}function A(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"col-12 col-sm-12 col-md-8 col-lg-9"},s.a.createElement(T,{desc:e.exp.description}),s.a.createElement(I,{lists:e.exp.qualities}),s.a.createElement(C,{expers:e.exp.experiences}),s.a.createElement(C,{expers:e.exp.experiencesAlso}),s.a.createElement(S,{langs:e.exp.languages})))}var P=function(e){return s.a.createElement(s.a.Fragment,null,s.a.createElement(A,{exp:e}))},O=function(e){var t=Object.values(e).map(function(e){return e.typos}),a=s.a.useState(t[0].list[0].question),n=Object(w.a)(a,2),r=n[0],o=n[1];return s.a.createElement("div",{className:"col-12 col-sm-12 col-md-8 col-lg-9"},s.a.createElement("h3",null,"FAQ"),s.a.createElement("ul",{className:"list-group"},t.length>0&&t.map(function(e,t){var a=e.name,n=e.list;return s.a.createElement("li",{key:t,className:"list-group-item"},s.a.createElement("h5",null,a,s.a.createElement("span",{className:"badge badge-pill badge-success"},n.length)),n.length&&n.map(function(e,t){var a=e.question,n=e.answer;return s.a.createElement("div",{key:t,className:"coder-box ".concat(a===r?"food":"")},s.a.createElement("p",{className:"coder-title list-group-item ".concat(a===r?"active ":"","pre-line"),onClick:function(e){return function(e){var t=e.target.textContent;o(t)}(e)}},a),s.a.createElement("p",{className:"coder pre-line"},n))}))})))},F=function(){return n.createElement("div",{className:"App-content"},n.createElement("p",null,"404 - page not found"),n.createElement("a",{href:"https://github.com/snikos/snikos-cv",title:"Back to Github page"},"Back to Github page"))},H=(a(35),a(36),a(37),a(38),a(39),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(h.a)(this,Object(u.a)(t).call(this,e))).state={menuTop:[{link:"/",text:"Give a start"},{link:"/faq",text:"FAQ"}],listFoo:["CV Powered by: ","Javascript","React","Components","Css3 Animation","Three.js","TweenMax.js"],start:f,faq:p},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=this;return s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"row bg-light"},s.a.createElement(b,{list:this.state.start})),s.a.createElement("div",{className:"row"},s.a.createElement(g,null)),s.a.createElement("div",{className:"row topMenu"},s.a.createElement(E,{exp:this.state.start,nav:this.state.menuTop}),s.a.createElement(d.c,null,s.a.createElement(d.a,{exact:!0,path:"/",render:function(){return s.a.createElement(P,e.state.start)}}),s.a.createElement(d.a,{exact:!0,path:"/faq",render:function(){return s.a.createElement(O,e.state.faq)}}),s.a.createElement(d.a,{path:"*",component:F}))),s.a.createElement("div",{className:"row bg-light"},s.a.createElement(W,{lists:this.state.listFoo})))}}]),t}(n.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(40);o.a.render(s.a.createElement(i.a,{basename:"/snikos-cv"},s.a.createElement(H,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[24,1,2]]]);
//# sourceMappingURL=main.73a1f9bd.chunk.js.map